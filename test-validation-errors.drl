package com.example.errors

import java.util.List
import java.util.Date;

global List<String> messages

// Error 1: Missing semicolon in package declaration (line 1)
// Error 2: Missing semicolon in import statement (line 3)
// Error 3: Missing semicolon in global declaration (line 6)

// Error 4: Unmatched opening parenthesis in multi-line condition
rule "Bracket Error Rule"
    when
        $person : Person(
            age > 18,
            name != null
            // Missing closing parenthesis
        $account : Account(owner == $person)
    then
        System.out.println("This rule has bracket errors");
end

// Error 5: Unmatched closing parenthesis
rule "Another Bracket Error"
    when
        $person : Person
            age > 18,
            name != null)  // Extra closing parenthesis
    then
        System.out.println("Another bracket error");
end

// Error 6: Unterminated string literal
rule "String Error Rule"
    when
        $person : Person(name == "John Doe)  // Missing closing quote
    then
        System.out.println("String error");
end

// Error 7: Function with unmatched braces
function String badFunction(String input) {
    if (input != null) {
        return input.toUpperCase();
    // Missing closing brace for function

// Error 8: Assignment operator instead of comparison
rule "Operator Error Rule"
    when
        $person : Person(age = 18)  // Should be ==
    then
        System.out.println("Operator error");
end

// Error 9: Missing spaces around operators (style warnings)
rule "Style Warning Rule"
    when
        $person : Person(age>18&&name!=null||status=="ACTIVE")
    then
        System.out.println("Style warnings");
end

// Error 10: Duplicate rule name
rule "Duplicate Rule"
    when
        $person : Person()
    then
        System.out.println("First rule");
end

rule "Duplicate Rule"  // Duplicate name error
    when
        $customer : Customer()
    then
        System.out.println("Second rule with same name");
end

// Error 11: Empty rule name
rule ""
    when
        $person : Person()
    then
        System.out.println("Empty name rule");
end

// Error 12: Rule without end keyword
rule "Missing End Rule"
    when
        $person : Person()
    then
        System.out.println("Missing end");
// Missing 'end' keyword

// Error 13: Invalid operator
rule "Invalid Operator Rule"
    when
        $person : Person(age === 18)  // Invalid operator ===
    then
        System.out.println("Invalid operator");
end

// Error 14: Malformed eval condition with unmatched parentheses
rule "Eval Error Rule"
    when
        $person : Person()
        eval(
            $person.getAge() > 18 &&
            $person.getName() != null
            // Missing closing parenthesis for eval
    then
        System.out.println("Eval error");
end
// Error 15:  rule not ule
ule "Eval Error Rule"
    when
        $person : Person()
        eval(
            $person.getAge() > 18 &&
            $person.getName() != null
            // Missing closing parenthesis for eval
    then
        System.out.println("Eval error");
end

// Error 15:  no-loop twice error
rule "Eval Error Rule"
no-loop 
no-loop
    when
        $person : Person()
        eval(
            $person.getAge() > 18 &&
            $person.getName() != null
            // Missing closing parenthesis for eval
    then
        System.out.println("Eval error");
end
