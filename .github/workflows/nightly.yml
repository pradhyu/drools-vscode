name: Nightly Build

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  nightly:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full test suite
      run: npm run test:all
      
    - name: Build extension
      run: npm run build
      
    - name: Create nightly version
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        NIGHTLY_VERSION="${CURRENT_VERSION}-nightly.$(date +%Y%m%d)"
        npm version $NIGHTLY_VERSION --no-git-tag-version
        echo "NIGHTLY_VERSION=$NIGHTLY_VERSION" >> $GITHUB_ENV
        
    - name: Package nightly build
      run: npm run package:pre-release
      
    - name: Upload nightly artifact
      uses: actions/upload-artifact@v4
      with:
        name: drools-vscode-extension-nightly
        path: '*.vsix'
        retention-days: 7
        
    - name: Create nightly release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: nightly-${{ env.NIGHTLY_VERSION }}
        release_name: Nightly Build ${{ env.NIGHTLY_VERSION }}
        body: |
          ## Nightly Build
          
          This is an automated nightly build of the Drools Language Support extension.
          
          ⚠️ **Warning**: This is a development build and may contain unstable features or bugs.
          
          ### Installation
          
          Download the VSIX file and install manually:
          
          ```bash
          code --install-extension drools-vscode-extension-${{ env.NIGHTLY_VERSION }}.vsix
          ```
          
          ### Changes
          
          This build includes the latest changes from the main branch.
          
        draft: false
        prerelease: true
        
  cleanup:
    runs-on: ubuntu-latest
    needs: nightly
    
    steps:
    - name: Cleanup old nightly releases
      uses: actions/github-script@v7
      with:
        script: |
          const { data: releases } = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          const nightlyReleases = releases
            .filter(release => release.tag_name.startsWith('nightly-'))
            .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))
            .slice(7); // Keep only the latest 7 nightly builds
          
          for (const release of nightlyReleases) {
            console.log(`Deleting old nightly release: ${release.tag_name}`);
            await github.rest.repos.deleteRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.id,
            });
            
            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${release.tag_name}`,
              });
            } catch (error) {
              console.log(`Could not delete tag ${release.tag_name}: ${error.message}`);
            }
          }