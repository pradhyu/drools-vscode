name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:all
      
    - name: Build extension
      run: npm run build
      
    - name: Update version
      if: github.event.inputs.version
      run: |
        npm version ${{ github.event.inputs.version }} --no-git-tag-version
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json
        git commit -m "chore: bump version to ${{ github.event.inputs.version }}"
        
    - name: Package extension
      run: |
        if [[ "${{ github.event.inputs.prerelease }}" == "true" ]]; then
          npm run package:pre-release
        else
          npm run package
        fi
        
    - name: Get package info
      id: package
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        PACKAGE_NAME=$(node -p "require('./package.json').name")
        echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
        echo "name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name || format('v{0}', steps.package.outputs.version) }}
        release_name: Release ${{ steps.package.outputs.version }}
        body: |
          ## Changes in this Release
          
          See [CHANGELOG.md](https://github.com/drools-community/drools-vscode-extension/blob/main/CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          You can install this extension from the VS Code Marketplace or download the VSIX file below and install it manually:
          
          ```bash
          code --install-extension ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}.vsix
          ```
          
          ## What's New
          
          - Enhanced Drools language support
          - Improved performance and stability
          - Bug fixes and improvements
          
        draft: false
        prerelease: ${{ github.event.inputs.prerelease == 'true' }}
        
    - name: Upload VSIX to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}.vsix
        asset_name: ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}.vsix
        asset_content_type: application/zip
        
    - name: Publish to VS Code Marketplace
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
      run: |
        if [[ "${{ github.event.inputs.prerelease }}" == "true" ]]; then
          npm run publish:pre-release
        else
          npm run publish
        fi
        
    - name: Publish to Open VSX Registry
      env:
        OVSX_PAT: ${{ secrets.OVSX_PAT }}
      run: |
        npx ovsx publish ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}.vsix -p $OVSX_PAT
        
  notify:
    runs-on: ubuntu-latest
    needs: release
    if: success()
    
    steps:
    - name: Notify success
      run: |
        echo "âœ… Extension successfully released!"
        echo "ðŸ“¦ Version: ${{ needs.release.outputs.version }}"
        echo "ðŸš€ Published to VS Code Marketplace"
        echo "ðŸ“‹ GitHub Release created"